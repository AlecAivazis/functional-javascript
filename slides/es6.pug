section
    section
        h2 Syntax
    section
        img(src="static/images/es6.jpg")
    section(style="display: flex;")
        h2 Variable Declaration
        .row
            pre(style="margin-top: 0; margin-bottom: 0; padding-top: 0; padding-bottom: 0;")
                code.
                    // hoisted, functionally scoped
                    var asdf = 'asdf'
        .row.fragment(data-fragment-index=1)
            pre(style="margin-top: 0; margin-bottom: 0; padding-top: 0; padding-bottom: 0;")
                code.
                    // cannot be re-declared, block scoped
                    let foo = 'bar'
                    // cannot be changed (some times), block scoped
                    const bar = 'baz'
    section
        h2 Better Variable Declaration
        pre
            code.
                // cannot be re-declared
                let foo = 'bar'
                // cannot be changed (some times)
                const bar = 'baz'

    section
        h2 Anonymous Functions
        div(style="display: flex; flex-direction: row;")
            .row
                .column
                    pre(style="padding-right: 0")
                        code.javascript.
                            // does this act like a var, let,
                            // or const?
                            function myFunc(name) {
                                return 'Hello ' + name
                            }
                .column.fragment(data-fragment-index=1)
                    pre(style="width: 95%;")
                        code.javascript(data-noescape).

                            // now we can decide!
                            const myNewFunc = (name) => (
                                'Hello ' + name
                            )

                            // sometimes implicit returns are bad
                            const myNewestFunc = (name) => {
                                return 'Hello ' + name
                            }
    section
        h2 destructuring
        .row
            .column
                pre
                    code.javascript.
                        var data = {'foo': 'bar'}
                        // grab the foo entry
                        var foo = data.foo

                pre
                    code.javascript.
                        function myFunc(args) {
                            console.log(args.foo)
                        }
                        myFunc({foo: 'bar'})

            .column.fragment(data-fragment-index=1)
                pre
                    code.javascript.
                        const data = {'foo': 'bar'}
                        // grab the foo entry
                        const {foo} = data

                pre
                    code.javascript.
                        function myFunc({foo}) {
                            console.log(foo)
                        }
                        myFunc({foo: 'bar'})

    section
        h2 spread
        .row
            .column
                pre
                    code.javascript.
                        var mockData = {
                            foo: 'bar',
                        }

                        var newObject = Object.assign({},
                            mockData,
                            {
                                'bar': 'baz'
                            }
                        )
            .column.fragment(data-fragment-index=1)
                pre
                    code.javascript.
                        const mockData = {
                            foo: 'bar',
                        }

                        const newObj = {
                            ...mockData,
                            'bar': 'baz',
                        }
